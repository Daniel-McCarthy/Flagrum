// <auto-generated />
using System;
using Flagrum.Web.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flagrum.Web.Persistence.Migrations
{
    [DbContext(typeof(FlagrumDbContext))]
    [Migration("20220629103202_Ps4VertexLayoutTypeMap")]
    partial class Ps4VertexLayoutTypeMap
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ArchiveLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ArchiveLocations");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.AssetExplorerNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("AssetExplorerNodes");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.AssetUri", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArchiveLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uri");

                    b.HasIndex("ArchiveLocationId");

                    b.ToTable("AssetUris");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcMod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(37)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EarcMods");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModBackup", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<int>("Flags")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Locale")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RelativePath")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uri");

                    b.ToTable("EarcModBackups");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModEarc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EarcModId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EarcRelativePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EarcModId");

                    b.ToTable("EarcModEarcs");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModReplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EarcModEarcId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReplacementFilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EarcModEarcId");

                    b.ToTable("EarcModReplacements");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FestivalDependencies");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependencyFestivalDependency", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("FestivalDependencyFestivalDependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependencyFestivalSubdependency", b =>
                {
                    b.Property<int>("DependencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubdependencyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DependencyId", "SubdependencyId");

                    b.HasIndex("SubdependencyId");

                    b.ToTable("FestivalDependencyFestivalSubdependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalMaterialDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FestivalMaterialDependencies");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalModelDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<int>("VertexLayoutType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FestivalModelDependencies");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalModelDependencyFestivalMaterialDependency", b =>
                {
                    b.Property<int>("ModelDependencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialDependencyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModelDependencyId", "MaterialDependencyId");

                    b.HasIndex("MaterialDependencyId");

                    b.ToTable("FestivalModelDependencyFestivalMaterialDependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalSubdependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FestivalSubdependencies");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalSubdependencyFestivalModelDependency", b =>
                {
                    b.Property<int>("SubdependencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelDependencyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubdependencyId", "ModelDependencyId");

                    b.HasIndex("ModelDependencyId");

                    b.ToTable("FestivalSubdependencyFestivalModelDependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ModelReplacementFavourite", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id", "IsDefault");

                    b.ToTable("ModelReplacementFavourites");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ModelReplacementPath", b =>
                {
                    b.Property<int>("ModelReplacementPresetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("ModelReplacementPresetId", "Path");

                    b.ToTable("ModelReplacementPaths");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ModelReplacementPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModelReplacementPresets");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4ArchiveAsset", b =>
                {
                    b.Property<int>("Ps4ArchiveLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ps4AssetUriId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ps4ArchiveLocationId", "Ps4AssetUriId");

                    b.HasIndex("Ps4AssetUriId");

                    b.ToTable("Ps4ArchiveAssets");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4ArchiveLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ps4ArchiveLocations");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4AssetUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ps4AssetUris");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4VertexLayoutTypeMap", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<int>("VertexLayoutType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uri");

                    b.ToTable("Ps4VertexLayoutTypeMaps");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.StatePair", b =>
                {
                    b.Property<int>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("StatePairs");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.AssetExplorerNode", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.AssetExplorerNode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.AssetUri", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.ArchiveLocation", "ArchiveLocation")
                        .WithMany("AssetUris")
                        .HasForeignKey("ArchiveLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchiveLocation");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModEarc", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.EarcMod", "EarcMod")
                        .WithMany("Earcs")
                        .HasForeignKey("EarcModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EarcMod");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModReplacement", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.EarcModEarc", "EarcModEarc")
                        .WithMany("Replacements")
                        .HasForeignKey("EarcModEarcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EarcModEarc");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependencyFestivalDependency", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalDependency", "Child")
                        .WithMany("Children")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalDependency", "Parent")
                        .WithMany("Parents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependencyFestivalSubdependency", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalDependency", "Dependency")
                        .WithMany("Subdependencies")
                        .HasForeignKey("DependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalSubdependency", "Subdependency")
                        .WithMany("Parents")
                        .HasForeignKey("SubdependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dependency");

                    b.Navigation("Subdependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalModelDependencyFestivalMaterialDependency", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalMaterialDependency", "MaterialDependency")
                        .WithMany("Parents")
                        .HasForeignKey("MaterialDependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalModelDependency", "ModelDependency")
                        .WithMany("Children")
                        .HasForeignKey("ModelDependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialDependency");

                    b.Navigation("ModelDependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalSubdependencyFestivalModelDependency", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalModelDependency", "ModelDependency")
                        .WithMany("Parents")
                        .HasForeignKey("ModelDependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flagrum.Web.Persistence.Entities.FestivalSubdependency", "Subdependency")
                        .WithMany("Children")
                        .HasForeignKey("SubdependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelDependency");

                    b.Navigation("Subdependency");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ModelReplacementPath", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.ModelReplacementPreset", null)
                        .WithMany("ReplacementPaths")
                        .HasForeignKey("ModelReplacementPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4ArchiveAsset", b =>
                {
                    b.HasOne("Flagrum.Web.Persistence.Entities.Ps4ArchiveLocation", "Ps4ArchiveLocation")
                        .WithMany("ArchiveAssets")
                        .HasForeignKey("Ps4ArchiveLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flagrum.Web.Persistence.Entities.Ps4AssetUri", "Ps4AssetUri")
                        .WithMany("ArchiveAssets")
                        .HasForeignKey("Ps4AssetUriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ps4ArchiveLocation");

                    b.Navigation("Ps4AssetUri");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ArchiveLocation", b =>
                {
                    b.Navigation("AssetUris");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.AssetExplorerNode", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcMod", b =>
                {
                    b.Navigation("Earcs");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.EarcModEarc", b =>
                {
                    b.Navigation("Replacements");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalDependency", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");

                    b.Navigation("Subdependencies");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalMaterialDependency", b =>
                {
                    b.Navigation("Parents");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalModelDependency", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.FestivalSubdependency", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.ModelReplacementPreset", b =>
                {
                    b.Navigation("ReplacementPaths");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4ArchiveLocation", b =>
                {
                    b.Navigation("ArchiveAssets");
                });

            modelBuilder.Entity("Flagrum.Web.Persistence.Entities.Ps4AssetUri", b =>
                {
                    b.Navigation("ArchiveAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
