<GroupContainer Group="Group" Class="bg-grey-900 border-2 border-grey-700 min-w-400 min-h-300">
    <div class="flex flex-row py-2">
        <div>
            @foreach (var portModel in Group.Ports.Where(p => p.Alignment == PortAlignment.Left))
            {
                var port = (StandardPort)portModel;
                <div class="row">
                    <StandardPortRenderer Port="port" />
                    <span class="flex-grow">@port.Name</span>
                </div>
            }
        </div>
        <div class="flex-grow text-center flex flex-row items-center">
            <div class="flex-grow"></div>
            @if (IsEditing)
            {
                <input type="text" class="bg-dark border border-dark-700" style="min-width: 100px" @bind="Group.Title" />
                <span class="ml-2 material-icons-outlined cursor-pointer" @onclick="SetTitle">done</span>
            }
            else
            {
                <span class="font-display text-xl">@Group.Title</span>
                <span class="ml-2 material-icons-outlined cursor-pointer text-sm" @onclick="EditTitle">edit</span>
            }
            <div class="flex-grow"></div>
        </div>
        <div>
            @foreach (var portModel in Group.Ports.Where(p => p.Alignment == PortAlignment.Right))
            {
                var port = (StandardPort)portModel;
                <div class="row">
                    <span class="flex-grow text-right">@port.Name</span>
                    <StandardPortRenderer Port="port"/>
                </div>
            }
        </div>
    </div>
    <GroupLinks />
    <GroupNodes />
</GroupContainer>

@code
{
    [CascadingParameter] public Diagram Diagram { get; set; }
    [Parameter] public StandardGroup Group { get; set; }

    private bool IsEditing { get; set; }

    private void EditTitle()
    {
        IsEditing = true;
        StateHasChanged();
    }

    private void SetTitle()
    {
        IsEditing = false;
        StateHasChanged();
    }
}