@typeparam TEnum
@using Flagrum.Core.Utilities
@inherits InputBase<TEnum>

<select value="@CurrentValueAsString"
        @onchange="OnChange"
        class="input bg-dark-550 w-full">
    @foreach (var item in Enum.GetValues(typeof(TEnum)))
    {
        <option value="@item" class="text-grey-400">@(AutoSpaceNames ? item.ToString().SpacePascalCase() : item.ToString())</option>
    }
</select>

@code
{
    [Parameter]
    public bool AutoSpaceNames { get; set; }

    private void OnChange(ChangeEventArgs e)
    {
        CurrentValueAsString = e.Value.ToString();
    }

    protected override bool TryParseValueFromString(string value, out TEnum result, out string validationErrorMessage)
    {
        result = (TEnum)Enum.Parse(typeof(TEnum), value);
        validationErrorMessage = null;
        return true;
    }
}